################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
# Default target
all-local: doc

# Public programs ("main" tags in project.xml), auto-regenerated:
MAN1 = cucumber_runner.1 step_runner.1
# Public classes ("class" tags in project.xml), auto-regenerated:
MAN3 = step_defs.3 cucumber_feature_runner.3 cuc_gherkin_doc.3 cuc_pickle.3 cucumber.3 cucumber_asserts.3 cucumber_step_def.3 cucumber_steps_args.3 cucumber_steps.3
# Project overview, written by a human after initial skeleton:
# NOTE: stub doc/cucumber-c.adoc is generated by GSL from project.xml
#       and then comitted to SCM and maintained manually to describe the
#       project (section 7 = Overview, conventions, and miscellaneous).
MAN7 = cucumber-c.7
MAN_DOC = $(MAN1) $(MAN3) $(MAN7)

# Assumption: the single .7 page only covers the project and is maintained
# manually. The SCM-tracked text source file name uses an .adoc extension
# so as not to conflict with generated .txt files (in cases when a "class"
# or a "main" name is same as overall project name).
MAN_TXT = $(MAN7:%.7=%.adoc)

EXTRA_DIST = asciidoc.conf mkman

if INSTALL_MAN
dist_man_MANS = $(MAN_DOC)
endif

if BUILD_DOC
MAN_TXT += $(MAN1:%.1=%.txt)
MAN_TXT += $(MAN3:%.3=%.txt)

DISTCLEANFILES = $(MAN_DOC)

dist-hook : $(MAN_DOC)

SUFFIXES=.txt .adoc .xml .xml7 .1 .3 .7

.txt.xml:
	asciidoc -d manpage -b docbook -f $(srcdir)/asciidoc.conf \
        -acucumber-c_version=@PACKAGE_VERSION@ -o$@ $<
.xml.1:
	xmlto -o $(@D) man $<
.xml.3:
	xmlto -o $(@D) man $<

# Special handling for project overview whose basename may collide
# with a main or class name
.adoc.xml7:
	asciidoc -d manpage -b docbook -f $(srcdir)/asciidoc.conf \
        -acucumber-c_version=@PACKAGE_VERSION@ -o$@ $<
.xml7.7:
	xmlto -o $(@D) man $<

# List of *.txt and *.doc files generated during build from comments
# in project program source files and further processed into manpages.
GENERATED_DOCS =

# No-op, docs and texts are generated by mkman in one shot - just
# make a dependency that can not parallelize and break stuff.
# Also, to be validly processed, the dependency must have SOME payload
.txt.doc:
	@true

GENERATED_DOCS += step_defs.txt step_defs.doc
step_defs.txt: $(top_srcdir)/src/step_defs.c
	"$(srcdir)/mkman" "step_defs" "$(builddir)/step_defs.txt" "$(srcdir)/.."

GENERATED_DOCS += cucumber_feature_runner.txt cucumber_feature_runner.doc
cucumber_feature_runner.txt: $(top_srcdir)/src/cucumber_feature_runner.c
	"$(srcdir)/mkman" "cucumber_feature_runner" "$(builddir)/cucumber_feature_runner.txt" "$(srcdir)/.."

GENERATED_DOCS += cuc_gherkin_doc.txt cuc_gherkin_doc.doc
cuc_gherkin_doc.txt: $(top_srcdir)/src/cuc_gherkin_doc.c
	"$(srcdir)/mkman" "cuc_gherkin_doc" "$(builddir)/cuc_gherkin_doc.txt" "$(srcdir)/.."

GENERATED_DOCS += cuc_pickle.txt cuc_pickle.doc
cuc_pickle.txt: $(top_srcdir)/src/cuc_pickle.c
	"$(srcdir)/mkman" "cuc_pickle" "$(builddir)/cuc_pickle.txt" "$(srcdir)/.."

GENERATED_DOCS += cucumber.txt cucumber.doc
cucumber.txt: $(top_srcdir)/src/cucumber.c
	"$(srcdir)/mkman" "cucumber" "$(builddir)/cucumber.txt" "$(srcdir)/.."

GENERATED_DOCS += cucumber_asserts.txt cucumber_asserts.doc
cucumber_asserts.txt: $(top_srcdir)/src/cucumber_asserts.c
	"$(srcdir)/mkman" "cucumber_asserts" "$(builddir)/cucumber_asserts.txt" "$(srcdir)/.."

GENERATED_DOCS += cucumber_step_def.txt cucumber_step_def.doc
cucumber_step_def.txt: $(top_srcdir)/src/cucumber_step_def.c
	"$(srcdir)/mkman" "cucumber_step_def" "$(builddir)/cucumber_step_def.txt" "$(srcdir)/.."

GENERATED_DOCS += cucumber_steps_args.txt cucumber_steps_args.doc
cucumber_steps_args.txt: $(top_srcdir)/src/cucumber_steps_args.c
	"$(srcdir)/mkman" "cucumber_steps_args" "$(builddir)/cucumber_steps_args.txt" "$(srcdir)/.."

GENERATED_DOCS += cucumber_steps.txt cucumber_steps.doc
cucumber_steps.txt: $(top_srcdir)/src/cucumber_steps.c
	"$(srcdir)/mkman" "cucumber_steps" "$(builddir)/cucumber_steps.txt" "$(srcdir)/.."

### Note: for mains, we keep the source name rather than flattened name:c
### so that the manpages for binary programs match their name, at expense
### of perhaps being built in a subdirectory under doc/.
GENERATED_DOCS += cucumber_runner.txt cucumber_runner.doc
cucumber_runner.txt: $(top_srcdir)/src/cucumber_runner.c
	mkdir -p "$(builddir)/$(@D)"
	"$(srcdir)/mkman" "cucumber_runner" "$(builddir)/cucumber_runner.txt" "$(srcdir)/.."

GENERATED_DOCS += step_runner.txt step_runner.doc
step_runner.txt: $(top_srcdir)/src/step_runner.c
	mkdir -p "$(builddir)/$(@D)"
	"$(srcdir)/mkman" "step_runner" "$(builddir)/step_runner.txt" "$(srcdir)/.."


clean-local:
	rm -f *.1 *.3 *.7 $(GENERATED_DOCS)

doc: $(GENERATED_DOCS)

else
doc:
	@echo "SKIPPING documentation generation and formatting (BUILD_DOC was not required and/or tools are missing)" >&2
endif

EXTRA_DIST += $(MAN_TXT)
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
